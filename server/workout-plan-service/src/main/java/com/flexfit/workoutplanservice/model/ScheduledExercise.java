package com.flexfit.workoutplanservice.model;

import com.flexfit.workoutplanservice.model.enums.CompletionStatus;
import com.flexfit.workoutplanservice.model.enums.EquipmentItem;
import com.flexfit.workoutplanservice.model.enums.SportType;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;
import java.util.UUID;

@Entity
@Table(name = "scheduled_exercises")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class ScheduledExercise {

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "daily_workout_id", nullable = false)
    private DailyWorkout dailyWorkout;

    @Column(nullable = false)
    private Integer sequenceOrder;

    @Column(nullable = false)
    private String exerciseName; // Generated by GenAI

    @Column(columnDefinition = "TEXT")
    private String description; // Generated by GenAI

    @ElementCollection(targetClass = SportType.class, fetch = FetchType.EAGER)
    @CollectionTable(name = "exercise_sport_types", joinColumns = @JoinColumn(name = "exercise_id"))
    @Enumerated(EnumType.STRING)
    @Column(name = "sport_type")
    private List<SportType> applicableSportTypes; // Generated by GenAI

    @ElementCollection(fetch = FetchType.EAGER)
    @CollectionTable(name = "exercise_primary_muscles", joinColumns = @JoinColumn(name = "exercise_id"))
    @Column(name = "muscle_group")
    private List<String> muscleGroupsPrimary; // Generated by GenAI

    @ElementCollection(fetch = FetchType.EAGER)
    @CollectionTable(name = "exercise_secondary_muscles", joinColumns = @JoinColumn(name = "exercise_id"))
    @Column(name = "muscle_group")
    private List<String> muscleGroupsSecondary; // Generated by GenAI

    @ElementCollection(targetClass = EquipmentItem.class, fetch = FetchType.EAGER)
    @CollectionTable(name = "exercise_equipment", joinColumns = @JoinColumn(name = "exercise_id"))
    @Enumerated(EnumType.STRING)
    @Column(name = "equipment_item")
    private List<EquipmentItem> equipmentNeeded; // Generated by GenAI

    private String difficulty; // Generated by GenAI (e.g., "Beginner")

    private String prescribedSetsRepsDuration; // Generated by GenAI

    @Column(columnDefinition = "TEXT")
    private String voiceScriptCueText; // Generated by GenAI

    private String videoUrl; // Optional, from GenAI

    private Integer rpeFeedback; // RPE for this specific exercise

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private CompletionStatus completionStatus = CompletionStatus.PENDING;
}