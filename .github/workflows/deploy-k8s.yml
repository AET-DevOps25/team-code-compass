name: 🚀 Deploy to Kubernetes

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  KUBECONFIG: ${{ secrets.KUBECONFIG }}

jobs:
  deploy:
    name: 🚀 Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [build-and-push-ghcr]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔑 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 🔧 Configure kubectl
        run: |
          aws eks update-kubeconfig --name flexfit-cluster-production --region us-east-1

      - name: 📦 Install Helm
        run: |
          curl https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz | tar xz
          sudo mv linux-amd64/helm /usr/local/bin/helm

      - name: 🚀 Deploy to Kubernetes
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          CHAIR_API_KEY: ${{ secrets.CHAIR_API_KEY }}
        run: |
          # Create namespace if it doesn't exist
          kubectl create namespace flexfit --dry-run=client -o yaml | kubectl apply -f -
          
          # Create Google credentials secret
          kubectl create secret generic flexfit-google-credentials \
            --from-literal=google-credentials.json="$GOOGLE_CREDENTIALS" \
            --namespace flexfit --dry-run=client -o yaml | kubectl apply -f -
          
          # Deploy using Helm
          helm upgrade --install flexfit ./helm/flexfit \
            --namespace flexfit \
            --set googleCredentials="$GOOGLE_CREDENTIALS" \
            --set chairApiKey="$CHAIR_API_KEY" \
            --set global.imageTag="${{ github.sha }}" \
            --wait --timeout=10m

      - name: 🏥 Health Check
        run: |
          echo "Waiting for services to be ready..."
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=flexfit --namespace flexfit --timeout=300s
          
          echo "Checking service endpoints..."
          kubectl get services -n flexfit
          kubectl get pods -n flexfit

      - name: 📊 Deployment Status
        run: |
          echo "🚀 Deployment completed successfully!"
          echo "Services deployed:"
          kubectl get services -n flexfit
          echo ""
          echo "Pods status:"
          kubectl get pods -n flexfit 