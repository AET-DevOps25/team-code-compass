---
config:
  theme: redux
  look: neo
  layout: elk
---
classDiagram
    class Gender {
        <<enumeration>>
        MALE
        FEMALE
        NON_BINARY
        PREFER_NOT_TO_SAY
        OTHER
    }
    class ExperienceLevel {
        <<enumeration>>
        TRUE_BEGINNER
        BEGINNER
        INTERMEDIATE
        ADVANCED
        REHAB_POSTPARTUM
    }
    class FitnessGoal {
        <<enumeration>>
        WEIGHT_LOSS
        MUSCLE_GAIN
        STRENGTH_GAIN
        IMPROVE_ENDURANCE
        IMPROVE_FLEXIBILITY_MOBILITY
        GENERAL_HEALTH_FITNESS
        ATHLETIC_PERFORMANCE
        STRESS_REDUCTION_WELLBEING
    }
    class SportType {
        <<enumeration>>
        STRENGTH
        HIIT
        YOGA_MOBILITY
        RUNNING_INTERVALS
    }
    class EquipmentItem {
        <<enumeration>>
        NO_EQUIPMENT
        DUMBBELLS_PAIR_LIGHT
        DUMBBELLS_PAIR_MEDIUM
        DUMBBELLS_PAIR_HEAVY
        ADJUSTABLE_DUMBBELLS
        KETTLEBELL
        BARBELL_WITH_PLATES
        RESISTANCE_BANDS_LIGHT
        RESISTANCE_BANDS_MEDIUM
        RESISTANCE_BANDS_HEAVY
        PULL_UP_BAR
        YOGA_MAT
        FOAM_ROLLER
        JUMP_ROPE
        BENCH_FLAT
        BENCH_ADJUSTABLE
        SQUAT_RACK
        TREADMILL
        STATIONARY_BIKE
        ELLIPTICAL
        ROWING_MACHINE
        CABLE_MACHINE_FULL
        LEG_PRESS_MACHINE
        MEDICINE_BALL
        STABILITY_BALL
    }
    class IntensityPreference {
        <<enumeration>>
        LOW_MODERATE
        MODERATE_HIGH
        PUSH_TO_LIMIT
    }
    class User {
        +UUID id
        +String username
        +String email
        +String password_hash
        +Date date_of_birth
        +Integer height_cm
        +Float weight_kg
        +Gender gender
        +Timestamp created_at
        +Timestamp updated_at
    }
    class UserPreferences {
        +UUID user_id (FK)
        +ExperienceLevel experience_level
        +FitnessGoal[] fitness_goals
        +SportType[] preferred_sport_types
        +EquipmentItem[] available_equipment
        +String workout_duration_range  // e.g., "30-45 minutes"
        +IntensityPreference intensity_preference
        +String health_notes
        +String[] disliked_exercises // Names of exercises user dislikes
    }
    class DailyWorkout {
        +UUID id
        +UUID user_id (FK) // Links directly to User
        +Date day_date
        +String focus_sport_type_for_the_day // e.g., STRENGTH, HIIT
        +String completion_status
        +Integer rpe_overall_feedback // Overall RPE for the daily workout
        +String cadence_metrics
        +String completion_notes
    }
    class ScheduledExercise {
        +UUID id
        +UUID daily_workout_id (FK)
        +Integer sequence_order
        +String exercise_name // Generated by GenAI
        +String description // Generated by GenAI
        +SportType[] applicable_sport_types // Generated by GenAI, maps to SportType enum
        +String[] muscle_groups_primary // Generated by GenAI
        +String[] muscle_groups_secondary // Generated by GenAI
        +EquipmentItem[] equipment_needed // Generated by GenAI, maps to EquipmentItem enum
        +String difficulty // Generated by GenAI (e.g., "Beginner", "Intermediate", "Advanced")
        +String prescribed_sets_reps_duration // Generated by GenAI (e.g., "3 sets of 10 reps", "30 seconds hold")
        +String voice_script_cue_text // Generated by GenAI
        +String video_url // Optional, generated by GenAI if available
        +Integer rpe_feedback // RPE for this specific exercise
        +String completion_status
    }
    User "1" -- "1" UserPreferences : has
    User "1" -- "0..*" DailyWorkout : has  // User can have multiple daily workouts
    DailyWorkout "1" -- "1..*" ScheduledExercise : includes // Daily workout consists of exercises
    User ..> Gender : uses
    UserPreferences ..> ExperienceLevel : uses
    UserPreferences ..> FitnessGoal : uses
    UserPreferences ..> SportType : uses
    UserPreferences ..> EquipmentItem : uses
    UserPreferences ..> IntensityPreference : uses
    ScheduledExercise ..> SportType : applicableFor
    ScheduledExercise ..> EquipmentItem : needs
