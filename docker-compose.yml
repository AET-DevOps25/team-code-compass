services:
  # FlexFit Client - Static Next.js App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: flexfit-client
    restart: always
    ports:
      - "3000:80"
    networks:
      - flexfit-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Service Registry (Eureka Server)
  service-registry:
    build:
      context: ./server/service-registry
      dockerfile: Dockerfile
    container_name: flexfit-service-registry
    restart: always
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - flexfit-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # API Gateway
  api-gateway:
    build:
      context: ./server/api-gateway
      dockerfile: Dockerfile
    container_name: flexfit-api-gateway
    restart: always
    ports:
      - "8000:8000"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_SERVER: http://service-registry:8761/eureka
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - flexfit-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8000/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16
    container_name: flexfit-postgres
    restart: always
    environment:
      # These environment variables are used to initialize the PostgreSQL database.
      # The values are loaded from the .env file for security and flexibility.
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      # Maps the container's port 5432 to the host's port 5432.
      # This allows external connections to the database if needed.
      - "5432:5432"
    volumes:
      # Persists the database data on the host machine, so you don't lose data
      # when the container is stopped or removed.
      - postgres-data:/var/lib/postgresql/data
    networks:
      - flexfit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./server/user-service
      dockerfile: Dockerfile
    container_name: flexfit-user-service
    restart: always
    environment:
      # Database connection settings
      DB_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Spring profiles
      SPRING_PROFILES_ACTIVE: docker
      # Eureka configuration
      EUREKA_SERVER: http://service-registry:8761/eureka
    ports:
      # Maps the container's port 8081 to the host's port 8081
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - flexfit-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

      # This section defines the new service for managing workout plans.
  workout-plan-service:
    build:
      context: ./server/workout-plan-service 
      dockerfile: Dockerfile
    container_name: flexfit-workout-plan-service
    restart: always
    environment:
      DB_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SPRING_PROFILES_ACTIVE: docker
      # Eureka configuration
      EUREKA_SERVER: http://service-registry:8761/eureka
    ports:
      # Exposing this service on port 8082
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy # Ensures the database is ready before starting
      service-registry:
        condition: service_healthy
    networks:
      - flexfit-network
    healthcheck:
      # Checks if the service's actuator health endpoint is responsive.
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8082/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s # Gives the service extra time to start up initially

  # GenAI Workout Worker
  genai-workout-worker:
    build:
      context: ./genai # Correct path to genai directory
      dockerfile: Dockerfile
    container_name: flexfit-genai-workout-worker
    restart: always
    environment:
      CHAIR_API_KEY: ${CHAIR_API_KEY}
      PORT: 8083
    ports:
      - "8083:8083"
    networks:
      - flexfit-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  tts-service:
    build:
      context: ./server/tts-service
      dockerfile: Dockerfile
    container_name: flexfit-tts-service
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_SERVER: http://service-registry:8761/eureka
    ports:
      - "8084:8080"
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - flexfit-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Defines the shared network for all services
networks:
  flexfit-network:
    driver: bridge

volumes:
  # Defines the named volume for data persistence.
  postgres-data: