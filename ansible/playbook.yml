---
- name: Deploy FlexFit Application
  hosts: flexfit
  become: yes
  vars:
    app_dir: /opt/flexfit
    docker_compose_version: "2.29.7"
    image_tag: "{{ lookup('env', 'IMAGE_TAG') | default('latest', true) }}"
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - docker.io
          - python3-pip
          - git
          - nginx
          - htop
          - curl
        state: present

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy docker-compose file
      template:
        src: docker-compose.aws.yml.j2
        dest: "{{ app_dir }}/docker-compose.yml"
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Copy environment file
      template:
        src: env.j2
        dest: "{{ app_dir }}/.env"
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Pull Docker images
      become_user: ubuntu
      docker_compose:
        project_src: "{{ app_dir }}"
        pull: yes
      environment:
        IMAGE_TAG: "{{ image_tag }}"

    - name: Start Docker Compose services
      become_user: ubuntu
      docker_compose:
        project_src: "{{ app_dir }}"
        state: present
      environment:
        IMAGE_TAG: "{{ image_tag }}"

    - name: Configure nginx reverse proxy
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/flexfit
        mode: '0644'

    - name: Enable nginx site
      file:
        src: /etc/nginx/sites-available/flexfit
        dest: /etc/nginx/sites-enabled/flexfit
        state: link

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test nginx configuration
      command: nginx -t
      changed_when: false

    - name: Restart nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes

    - name: Create systemd service for FlexFit
      template:
        src: flexfit.service.j2
        dest: /etc/systemd/system/flexfit.service
        mode: '0644'

    - name: Enable and start FlexFit service
      systemd:
        name: flexfit
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Wait for services to be ready
      uri:
        url: "http://localhost:8761/actuator/health"
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 10

    - name: Display service status
      command: docker-compose ps
      args:
        chdir: "{{ app_dir }}"
      register: docker_status
      changed_when: false

    - debug:
        msg: "{{ docker_status.stdout_lines }}"